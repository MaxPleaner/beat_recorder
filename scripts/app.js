// Generated by CoffeeScript 1.10.0
(function() {
  window.App = {
    PlaySound: function(soundId) {
      return createjs.Sound.play(soundId);
    },
    SoundIds: function() {
      return App.Private._GetSoundIds();
    },
    StartTicks: function(tics) {
      window.tickIdx = 0;
      return window.setInterval(App.Private.TickFn(tics), 200);
    },
    TicManips: {
      Add: function(ticks, addedTick, idx) {
        var beat, ticksClone;
        ticksClone = App.Private.CloneArray(ticks);
        beat = ticksClone[idx];
        beat.push(addedTick);
        return ticksClone;
      },
      Remove: function(ticks, removedTick, idx) {
        return _.reject(App.Private.CloneArray(ticks), function(beat) {
          return beat === removedTick;
        });
      }
    },
    Private: {
      TickFn: function(tics) {
        return function() {
          var notes;
          notes = ticks[window.tickIdx];
          notes.forEach(function(note) {
            App.PlaySound(note);
            return console.log(note);
          });
          window.tickIdx = window.tickIdx + 1;
          if (!ticks[window.tickIdx]) {
            return window.tickIdx = 0;
          }
        };
      },
      CloneArray: function(arr) {
        if (!Array.isArray(arr)) {
          return arr;
        }
        return _.map(arr, function(elem) {
          return App.Private.CloneArray(elem);
        });
      },
      _GetSoundIds: function() {
        return {
          Kick: this.LoadSound("kick", "sounds/kick.mp3"),
          Snare: this.LoadSound("snare", "sounds/rimshot.mp3"),
          HiHat: this.LoadSound("hihat", "sounds/hihat.mp3"),
          Crash: this.LoadSound("crash", "sounds/crash.mp3")
        };
      },
      LoadSound: function(soundId, filepath) {
        createjs.Sound.registerSound(filepath, soundId);
        return soundId;
      }
    }
  };

}).call(this);
